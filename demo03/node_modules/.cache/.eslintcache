[{"/Users/daeunyumacbook/react/react/demo03/src/index.js":"1","/Users/daeunyumacbook/react/react/demo03/src/App.js":"2","/Users/daeunyumacbook/react/react/demo03/src/reportWebVitals.js":"3","/Users/daeunyumacbook/react/react/demo03/src/components/Exam01.js":"4","/Users/daeunyumacbook/react/react/demo03/src/components/Exam02.js":"5","/Users/daeunyumacbook/react/react/demo03/src/components/Exam03.js":"6","/Users/daeunyumacbook/react/react/demo03/src/components/Exam04.js":"7","/Users/daeunyumacbook/react/react/demo03/src/components/Exam06.js":"8","/Users/daeunyumacbook/react/react/demo03/src/components/Exam05.js":"9","/Users/daeunyumacbook/react/react/demo03/src/components/Exam07.js":"10"},{"size":814,"mtime":1698647859712,"results":"11","hashOfConfig":"12"},{"size":610,"mtime":1698728562614,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1698644784526,"results":"14","hashOfConfig":"12"},{"size":1269,"mtime":1698650303284,"results":"15","hashOfConfig":"12"},{"size":785,"mtime":1698654099354,"results":"16","hashOfConfig":"12"},{"size":860,"mtime":1698667459245,"results":"17","hashOfConfig":"12"},{"size":1849,"mtime":1698728564473,"results":"18","hashOfConfig":"12"},{"size":1375,"mtime":1698723223031,"results":"19","hashOfConfig":"12"},{"size":1092,"mtime":1698723099379,"results":"20","hashOfConfig":"12"},{"size":5421,"mtime":1698740813651,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1047iim",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/daeunyumacbook/react/react/demo03/src/index.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/App.js",["53"],[],"/Users/daeunyumacbook/react/react/demo03/src/reportWebVitals.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam01.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam02.js",["54","55","56","57"],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam03.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam04.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam06.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam05.js",[],[],"/Users/daeunyumacbook/react/react/demo03/src/components/Exam07.js",["58"],[],"import { useEffect, useState } from \"react\";\n\nconst Exam07 = ()=>{\n\n    //객체로 상태 변수를 정의\n    const [member, setMember] = useState({//입력데이터\n        memberId:\"\",\n        memberPw:\"\",\n        memberPwRe:\"\"\n    });\n    const [result, setResult] = useState({//검사결과\n        memberId:null,\n        memberPw:null,\n        memberPwRe:null\n    });\n    //입력데이터가 변하면 검사결과가 자동으로 계산되도록 처리\n    const checkMember = ()=>{\n        //console.log(\"member가 변했습니다\");\n        //ID검사\n        const idRegex = /^[a-z][a-z0-9]{7,19}$/;\n        const idMatch = member.memberId.length === 0 ? null : idRegex.test(member.memberId);\n\n        //PW검사\n        const pwRegex = /^[A-Za-z0-9!@#$]{8,16}$/;\n        const pwMatch = member.memberPw.length === 0 ? null : pwRegex.test(member.memberPw);\n\n        //PW-RE검사\n        const pwReMatch = member.memberPwRe.length === 0 ? null : \n                                        member.memberPw.length > 0 && member.memberPw === member.memberPwRe;\n\n        setResult({\n            memberId : idMatch,\n            memberPw : pwMatch,\n            memberPwRe : pwReMatch\n        });\n    };\n\n    //useEffect(checkMember, [member]);\n\n    //객체의 상태를 한 번에 변경하는 함수를 구현\n    const changeMember = (e)=>{\n        setMember({\n            ...member,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-10 offset-md-1\">\n                    \n                    {/* 점보트론 */}\n                    <div className=\"p-4 text-light bg-dark rounded\">\n                        <h1>객체 상태 변수 문제</h1>\n                    </div>\n\n                    <form autoComplete=\"off\">\n\n                    <div className=\"row mt-4\">\n                        <div className=\"col\">\n                            <label className=\"form-label\">아이디</label>\n                            <input type=\"text\" name=\"memberId\" \n                                    className={`\n                                        form-control \n                                        ${result.memberId === true ? 'is-valid' : ''}\n                                        ${result.memberId === false ? 'is-invalid' : ''}\n                                    `}\n                                    value={member.memberId} onChange={changeMember}\n                                            onBlur={checkMember}/>\n                            <div className=\"valid-feedback\">멋진 아이디입니다!</div>\n                            <div className=\"invalid-feedback\">사용할 수 없는 아이디입니다</div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                        <div className=\"col\">\n                            <label className=\"form-label\">비밀번호</label>\n                            <input type=\"password\" name=\"memberPw\" \n                                    className={`\n                                        form-control\n                                        ${result.memberPw === true ? 'is-valid' : ''}\n                                        ${result.memberPw === false ? 'is-invalid' : ''}\n                                    `}\n                                    value={member.memberPw} onChange={changeMember}\n                                        onBlur={checkMember}/>\n                            <div className=\"valid-feedback\">올바른 형식의 비밀번호입니다</div>\n                            <div className=\"invalid-feedback\">비밀번호 형식이 올바르지 않습니다</div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                        <div className=\"col\">\n                            <label className=\"form-label\">비밀번호 확인</label>\n                            <input type=\"password\" name=\"memberPwRe\" \n                                    className={`\n                                        form-control\n                                        ${result.memberPwRe === true ? 'is-valid' : ''}\n                                        ${result.memberPwRe === false ? 'is-invalid' : ''}\n                                    `}\n                                    value={member.memberPwRe} onChange={changeMember}\n                                    onBlur={checkMember}/>\n                            <div className=\"valid-feedback\">비밀번호가 일치합니다</div>\n                            <div className=\"invalid-feedback\">비밀번호가 일치하지 않습니다</div>\n                        </div>\n                    </div>\n\n                    </form>\n\n                    <div className=\"row mt-4\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary w-100\"\n                                disabled={!(result.memberId === true && result.memberPw === true\n                                                    && result.memberPwRe === true)}>\n                                회원가입\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );    \n};\n\nexport default Exam07;",{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":9,"column":14,"nodeType":"61","messageId":"62","endLine":9,"endColumn":19},{"ruleId":"59","severity":1,"message":"64","line":14,"column":14,"nodeType":"61","messageId":"62","endLine":14,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":18,"column":14,"nodeType":"61","messageId":"62","endLine":18,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":33,"column":9,"nodeType":"68","endLine":33,"endColumn":54},{"ruleId":"59","severity":1,"message":"69","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'small' is defined but never used.","'normal' is defined but never used.","'big' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used."]