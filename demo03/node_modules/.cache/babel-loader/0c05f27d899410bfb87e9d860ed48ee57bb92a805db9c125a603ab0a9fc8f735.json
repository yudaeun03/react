{"ast":null,"code":"var _jsxFileName = \"/Users/daeunyumacbook/react/react/demo03/src/components/Exam01.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\"; // react 모듈 중에서 useState만 불러오겠다 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Exam01() {\n  _s();\n  // 데이터 \n  // - const는 값이 변하지 않는 변수를 의미 \n  // - React는 화면을 자동으로 갱신해주기 때문에 불변값이 아니면 처리를 안해준다\n  // - 변경은 setter 메소드로 처리하도록 설정되어 있다 \n  // - 변수를 선언할 때 setter 메소드까지 같이 만들도록 useState라는 명령을 제공한다\n  // useState 옆에 적히는 값은 초기값을 나타냄 \n\n  const [number, setNumber] = useState(10);\n  // --> number라는 상태변수를 10으로 만들고 변경은 setNumber 함수로만 가능하게 하겠다\n\n  function plus() {\n    setNumber(number + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCCAB \\uBC88\\uC9F8 \\uC608\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"number = \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary ms-2\",\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Exam01, \"CJdRp+cP/6wB47faTzxC+onVFPw=\");\n_c = Exam01;\nexport default Exam01;\nvar _c;\n$RefreshReg$(_c, \"Exam01\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Exam01","_s","number","setNumber","plus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/daeunyumacbook/react/react/demo03/src/components/Exam01.js"],"sourcesContent":["import { useState } from \"react\"; // react 모듈 중에서 useState만 불러오겠다 \n\n\nfunction Exam01(){\n    // 데이터 \n    // - const는 값이 변하지 않는 변수를 의미 \n    // - React는 화면을 자동으로 갱신해주기 때문에 불변값이 아니면 처리를 안해준다\n    // - 변경은 setter 메소드로 처리하도록 설정되어 있다 \n    // - 변수를 선언할 때 setter 메소드까지 같이 만들도록 useState라는 명령을 제공한다\n    // useState 옆에 적히는 값은 초기값을 나타냄 \n \n\n\n    const [number, setNumber] = useState(10);\n    // --> number라는 상태변수를 10으로 만들고 변경은 setNumber 함수로만 가능하게 하겠다\n\n    function plus() {\n        setNumber(number + 1);\n    }\n\n    return (\n        <>\n        <h1>첫 번째 예제</h1>\n\n        {/*데이터를 출력*/}\n        <h2>number = {number}</h2>\n\n\n        {/* class를 부여할 때는 class가 아니라 className이라고 적어야 함*/}\n        <button className=\"btn btn-primary\">+</button>\n        <button className=\"btn btn-primary ms-2\">-</button>\n        </>\n\n    );\n    }\n    \n    export default Exam01;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA;;EAIA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC;;EAEA,SAASS,IAAIA,CAAA,EAAG;IACZD,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;EACzB;EAEA,oBACIL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACAR,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhBZ,OAAA;MAAAQ,QAAA,GAAI,WAAS,EAACH,MAAM;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAI1BZ,OAAA;MAAQa,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CZ,OAAA;MAAQa,SAAS,EAAC,sBAAsB;MAAAL,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACjD,CAAC;AAGP;AAACR,EAAA,CA/BID,MAAM;AAAAW,EAAA,GAANX,MAAM;AAiCX,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}