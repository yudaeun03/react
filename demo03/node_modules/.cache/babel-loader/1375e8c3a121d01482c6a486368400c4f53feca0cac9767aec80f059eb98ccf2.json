{"ast":null,"code":"var _jsxFileName = \"/Users/daeunyumacbook/react/react/demo03/src/components/Exam06.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exam06 = () => {\n  _s();\n  //각각의 상태를 분리하여 관리할 때\n  //const [alias, setAlias] = useState(\"\");\n  //const [gender, setGender] = useState(\"남자\");\n\n  //상태를 하나의 객체로 관리할 때\n  const [info, setInfo] = useState({\n    alias: \"\",\n    // 별명 : \"\"\n    gender: \"남자\"\n    // 성별 : \"남자\"\n  });\n\n  //function changeInfo(e){}\n  const changeInfo = e => {\n    //console.log(e.target);//이벤트 발생 태그 확인\n    //console.log(e.target.name, e.target.value);//이름,값 확인\n\n    //info에서 이벤트가 발생한 태그명에 해당하는 필드만 입력값으로 바꾸고 나머진 그대로 둬라!\n    //- ...info는 info의 나머지 항목을 의미(rest 연산)\n    //- 객체에 [] 표시를 쓰면 필드명을 변수로 지정할 수 있다\n    setInfo({\n      ...info,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0C1\\uD0DC\\uBCC0\\uC218\\uAC00 \\uAC1D\\uCCB4\\uC778 \\uACBD\\uC6B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \"\\uC774\\uB984 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"alias\",\n      value: info.alias,\n      onChange: changeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 91\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 96\n    }, this), \"\\uC131\\uBCC4\", /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"gender\",\n      value: info.gender,\n      onChange: changeInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"\\uB0A8\\uC790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"\\uC5EC\\uC790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Exam06, \"9vf6ahJlFs3UycJM8x+XDXeH278=\");\n_c = Exam06;\nexport default Exam06;\nvar _c;\n$RefreshReg$(_c, \"Exam06\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Exam06","_s","info","setInfo","alias","gender","changeInfo","e","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/daeunyumacbook/react/react/demo03/src/components/Exam06.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Exam06 = ()=>{\n    //각각의 상태를 분리하여 관리할 때\n    //const [alias, setAlias] = useState(\"\");\n    //const [gender, setGender] = useState(\"남자\");\n\n    //상태를 하나의 객체로 관리할 때\n    const [info, setInfo] = useState({\n        alias : \"\",\n        // 별명 : \"\"\n        gender : \"남자\"\n        // 성별 : \"남자\"\n    });\n\n    //function changeInfo(e){}\n    const changeInfo = e=>{\n        //console.log(e.target);//이벤트 발생 태그 확인\n        //console.log(e.target.name, e.target.value);//이름,값 확인\n\n        //info에서 이벤트가 발생한 태그명에 해당하는 필드만 입력값으로 바꾸고 나머진 그대로 둬라!\n        //- ...info는 info의 나머지 항목을 의미(rest 연산)\n        //- 객체에 [] 표시를 쓰면 필드명을 변수로 지정할 수 있다\n        setInfo({\n            ...info,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    return (\n        <>\n            <h1>상태변수가 객체인 경우</h1>\n\n            이름 <input type=\"text\" name=\"alias\" value={info.alias} onChange={changeInfo}/> <br/><br/>\n            성별 \n            <select name=\"gender\" value={info.gender} onChange={changeInfo}>\n                <option>남자</option>\n                <option>여자</option>\n            </select>\n        </>\n    );\n};\n\nexport default Exam06;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACf;EACA;EACA;;EAEA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC7BS,KAAK,EAAG,EAAE;IACV;IACAC,MAAM,EAAG;IACT;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAGC,CAAC,IAAE;IAClB;IACA;;IAEA;IACA;IACA;IACAJ,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAIF,CAAC,CAACC,MAAM,CAACE;IAC/B,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,iBAElB,eAAAlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACP,IAAI,EAAC,OAAO;MAACC,KAAK,EAAER,IAAI,CAACE,KAAM;MAACa,QAAQ,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAAC,eAAAlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAExF,eAAAlB,OAAA;MAAQY,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAER,IAAI,CAACG,MAAO;MAACY,QAAQ,EAAEX,UAAW;MAAAK,QAAA,gBAC3Dd,OAAA;QAAAc,QAAA,EAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnBlB,OAAA;QAAAc,QAAA,EAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAACd,EAAA,CAvCID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}